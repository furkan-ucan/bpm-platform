name: Main Workflow

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_ENV: test
  MONGODB_URI: mongodb://localhost:27017/test
  JWT_SECRET: test-secret

jobs:
  validate:
    name: üîç Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install Dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Type Check
        working-directory: ./backend
        run: npm run type-check
      
      - name: Lint
        working-directory: ./backend
        run: npm run lint

  test:
    name: üß™ Test
    needs: validate
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install Dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Run Tests
        working-directory: ./backend
        run: npm test
        
      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./backend/coverage
          flags: unittests

  build:
    name: üèóÔ∏è Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install Dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Build
        working-directory: ./backend
        run: npm run build
      
      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: backend/dist

  deploy:
    name: üöÄ Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      url: ${{ github.ref == 'refs/heads/main' && 'https://bpm-platform.herokuapp.com' || 'https://bpm-platform-staging.herokuapp.com' }}
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: backend/dist
      
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ github.ref == 'refs/heads/main' && 'bpm-platform' || 'bpm-platform-staging' }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          branch: ${{ github.ref == 'refs/heads/main' && 'main' || 'develop' }}
