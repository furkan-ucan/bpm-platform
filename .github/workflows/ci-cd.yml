name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    
    - name: Install Dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Lint Check
      working-directory: ./backend
      run: |
        npm run lint || true
        npm run format:check || true
    
    - name: Run Tests
      working-directory: ./backend
      run: npm test -- --config=jest.config.cjs --coverage
    
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./backend/coverage
        flags: unittests

  security:
    name: 🛡️ Security Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      if: success()
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  build:
    name: 🏗️ Build
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    
    - name: Install Dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Build
      working-directory: ./backend
      run: npm run build

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: backend/dist
